Version=5.5
NumberOfModules=8
Module1=Starter
Module2=StateManager
Module3=sel_dev
Module4=AP_SET
Module5=KEY_SET
Module6=CM
Module7=INET_SET
Module8=STA_SET
Build1=Default,lnk.wifi_keys
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: http://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="5" android:targetSdkVersion="14"/>~\n~<uses-permission android:name="android.permission.INTERNET"/>~\n~<uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~SetApplicationAttribute(android:theme, "@android:style/Theme.Holo")~\n~~\n~'End of default text.~\n~
IconFile=
NumberOfFiles=7
File1=ap_set.bal
File2=INET_SET.bal
File3=key_set_lay.bal
File4=sel_dev_lay.bal
File5=set_lay.bal
File6=sta_set.bal
File7=STA_SET.bas
NumberOfLibraries=9
Library1=core
Library2=randomaccessfile
Library3=json
Library4=reflection
Library5=network
Library6=byteconverter
Library7=abwifi
Library8=mqtt
Library9=phone
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: WIFIKEYS
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
#End Region



Sub Process_Globals
	Dim conect_tmout As Int
	Public  send_state_timer As Timer
	
End Sub
Sub Globals
	Dim antidouble As Boolean
	Dim wifi As ABWifi
	Dim wifisignal As Int
	Dim butt(33) As Button
	Dim mqtt_but As Label
	Dim status_lab As Label
	Dim butlock(33) As Boolean
	Dim butstate(33) As Boolean
	Dim sld_norm,sld_on,sld_down As StateListDrawable
	Dim prs, ups,grn As ColorDrawable

	Dim cur_but_state As Int
	Dim prs_but As Int
	
   
End Sub

Sub Activity_Create(FirstTime As Boolean)
Try	
	Activity.Title ="Wi-Fi keys - " & StateManager.GetSetting2("cur_dev_name","none")
	Activity.AddMenuItem("Keys set","keys_set")
    Activity.AddMenuItem("Wi-Fi AP set","wf_ap_set")
    Activity.AddMenuItem("Wi-Fi client set","wf_STA_set")
	Activity.AddMenuItem("Select device","sel_dev")
	Activity.AddMenuItem("Inet set","inet_setm")	
	Activity.AddMenuItem("Reset device","reset_dev")	
	Activity.AddMenuItem("EXIT","exit_prg")	
    prs.Initialize(Colors.Gray,0dip)
	ups.Initialize(Colors.DarkGray, 0dip)
	grn.Initialize(Colors.RGB(0,150,0), 0dip)
  	sld_norm.Initialize
  	sld_norm.AddState(sld_norm.State_Pressed, ups)
	sld_norm.AddState(sld_norm.State_Enabled, ups)
	sld_on.Initialize
  	sld_on.AddState(sld_on.State_Pressed, grn)
	sld_on.AddState(sld_on.State_Enabled, grn)
	sld_down.Initialize
  	sld_down.AddState(sld_on.State_Pressed, prs)
	sld_down.AddState(sld_on.State_Enabled, prs)
	status_lab.Initialize("status_lab")
	status_lab.TextColor=Colors.Red
	status_lab.Text = "No connected"	
   	Activity.AddView(status_lab, 0dip, Activity.Height-20dip, Activity.Width,20dip) 
	mqtt_but.Initialize ("mqtt_but")
	mqtt_but.Text ="MQTT"
	mqtt_but.TextSize=12
	Activity.AddView(mqtt_but,Activity.Width-50dip, Activity.Height-20dip, 50dip,20dip) 
	If CM.connect_type=True Then
		mqtt_but.textColor=Colors.Green	
	Else
		mqtt_but.textColor=Colors.Gray	
	End If
	wifi.Initialize("wifi")	
	For i = 1 To 32
        Dim tbuts As Button
		tbuts.Initialize("tbuts")
        Activity.AddView(tbuts, -2000dip, 0, 20dip,20dip) 
		tbuts.Background=sld_norm
		butt(i)=tbuts
	Next
		add_key_to_panel
	
	send_state_timer.Initialize("send_state_timer", 1000)
	send_state_timer.Enabled =True
	
Catch
  proces_error(LastException.Message)
End Try
End Sub

Sub Activity_Resume
	add_key_to_panel
	wifi.StartWifi
	wifi.GetNewReadingWifi
End Sub

Sub Activity_Pause (UserClosed As Boolean)
Try
		wifi.StopWifi
	StateManager.SaveSettings
Catch
  proces_error(LastException.Message)
End Try
End Sub


Sub clear_keys
Try
	For i = 1 To 32
		butt(i).Left =-2000
		butt(i).Tag =""
		
	Next
Catch
  proces_error(LastException.Message)
End Try
End Sub






Sub send_comm(ind As Int,com As Boolean,lock As Boolean) 'відправка на пристрій команди(ind - номер кнопки, com -команда, lock - фіксація)
Try
	Dim Data As Map
	Data.Initialize
	Data.Put ("ncom",ind)
	Data.Put ("com",com)
	Data.Put ("lock",lock)
	CallSubDelayed2(Starter,"send_to_dev",Data)
Catch
  proces_error(LastException.Message)
End Try
End Sub



Sub send_state_timer_Tick() ' таймер перевірки звязку з пристроєм та відправки запитів на отримання рівня сигналу WI-FI
Try
	If prs_but>0 Then send_comm(prs_but,True,False)
	get_rssi
	If conect_tmout>0 Then
		conect_tmout=conect_tmout-1
		If conect_tmout=0 Then 
			status_lab.TextColor=Colors.Red
			status_lab.Text = "No connected"	
		End If
	End If
	
Catch
  proces_error(LastException.Message)
End Try
End Sub

Sub wifi_FoundReadings(readings As List)
		Dim reading As ABWifiReading = readings.Get(0)
		wifisignal=reading.Level
End Sub

 Sub get_rssi() 'Відправка запиту на отримання рівня сигналу WI-FI
 Try
	Dim Data As Map
	Data.Initialize
	Data.Put ("rssi",1)
	CallSubDelayed2(Starter,"send_to_dev",Data)
Catch
  proces_error(LastException.Message)
End Try
End Sub

Sub set_ris(rstate As Map)
Try
	Dim tmplong As Long
	tmplong =CM.tolong(rstate.Get("st"))
	For a=1 To 30
		butstate(a)=CM.obj2Bool(Bit.And(tmplong , 1))
		tmplong=Bit.ShiftRight(tmplong,1)
		If butstate(a)=True Then 
				butt(a).Background =sld_on
			Else
				butt(a).Background =sld_norm
		End If
	Next
	
	status_lab.TextColor=Colors.Green
	If CM.toint (rstate.Get("rssi"))<0 Then
		 status_lab.Text = " RSSI: " & rstate.Get("rssi") & "dbm   Connected" 
		 Else
		 	wifi.GetNewReadingWifi
		 	status_lab.Text = " myRSSI: " & wifisignal & "dbm   Connected" 	
	End If
	conect_tmout=3
	
Catch
  proces_error(LastException.Message)
End Try
End Sub


Sub add_key_to_panel() 'розміщення кнопок керування на екрані 
Try
	clear_keys
	Dim vert_size As Int=StateManager.GetSetting2("v_size","")
	Dim horiz_size As Int=StateManager.GetSetting2("h_size","")
	Dim font_size As Int=StateManager.GetSetting2("font_size","")
	Dim b_width,b_height,posx,posy,max_but As Int
	b_width=Activity.Width/horiz_size
	b_height=(Activity.height-20dip)/vert_size
	max_but =horiz_size*vert_size
	cur_but_state=0
	For a=1 To 32
		butt(a).Background=sld_norm
		If CM.toint(StateManager.GetSetting2("keytag" & a,""))>0 Then 
			If cur_but_state>=max_but Then Return
			posy=cur_but_state/horiz_size
			posx=cur_but_state mod horiz_size
			butlock(a)=CM.obj2Bool(StateManager.GetSetting2("keylock" & a,0))
			butt(a).Text =StateManager.GetSetting2("keytext" & a,"")
			butt(a).tag =StateManager.GetSetting2("keytag" & a,"")
			butt(a).Left =posx*(b_width+1dip)
			butt(a).top =posy*(b_height+1dip)
			butt(a).width =b_width-2dip
			butt(a).height =b_height-2dip
			butt(a).TextSize =font_size
			cur_but_state=cur_but_state+1			
		End If	
	Next
Catch
  proces_error(LastException.Message)
End Try
End Sub

'/////////////////////////////////////////////////////////////////////////////////////////////////////
'MQTT
'/////////////////////////////////////////////////////////////////////////////////////////////////////

Sub set_mqtt_state(state As Boolean)
	CM.connect_type=state
	If state=True Then
		mqtt_but.textColor=Colors.Green	
	Else
		mqtt_but.textColor=Colors.Gray	
	End If
End Sub
'/////////////////////////////////////////////////////////////////////////////////////////////////////
'Інтерфейс
'/////////////////////////////////////////////////////////////////////////////////////////////////////

Sub tbuts_down()
Try	
	If antidouble=True Then Return
	antidouble=True
    Dim p As Button
	Dim tmind As Int
    p = Sender
	p.Background =sld_down
	tmind=CM.toint(p.Tag)
	If butlock(tmind) =True Then
		If butstate(tmind)=True Then
			send_comm(tmind,False,False)
			butstate(tmind)=False
		Else	
			send_comm(tmind,True,True)
			butstate(tmind)=True
		End If
	Else
		butstate(tmind)=True
		send_comm(tmind,True,False)	
		prs_but=tmind	
	End If
Catch
  proces_error(LastException.Message)
End Try
End Sub

Sub tbuts_click()
Try
	antidouble=False
    Dim p As Button
	Dim tmind As Int
    p = Sender
	tmind=CM.toint(p.Tag)
	If butlock(tmind) =False Then
		prs_but=0
		send_comm(tmind,False,False)
		butstate(tmind)=False
	End If
Catch
  proces_error(LastException.Message)
End Try
End Sub

Sub sel_dev_Click()
    StartActivity(sel_dev)
End Sub
Sub wf_ap_set_Click()
    StartActivity(AP_SET)
End Sub
Sub wf_sta_set_Click()
    StartActivity(STA_SET)
End Sub
Sub keys_set_Click()
    StartActivity(KEY_SET)
End Sub
Sub inet_setm_Click()
    StartActivity(INET_SET)
End Sub
Sub reset_dev_Click()
Try
    Dim Data As Map
	Data.Initialize
	Data.Put ("rst",1)
	CallSubDelayed2(Starter,"send_to_dev",Data)
Catch
  proces_error(LastException.Message)
End Try

	
End Sub
Sub status_lab_LongClick

End Sub
Sub mqtt_but_LongClick
	If CM.connect_type=True Then
		CallSubDelayed(Starter,"mqtt_disconnect")
	Else
		CallSubDelayed(Starter,"mqtt_connect")
	End If


End Sub
Sub proces_error(msg As String)
	Msgbox(msg,"error")
End Sub